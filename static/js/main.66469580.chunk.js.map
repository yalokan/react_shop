{"version":3,"sources":["components/bookstore-service-context/bookstore-service-context.js","actions/index.js","utils/compose.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/hoc/with-bookstore-service.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","booksLoaded","newBooks","type","payload","booksError","error","bookAddedToCart","bookId","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","onClick","Spinner","ErrorIndicator","message","BookList","books","map","key","id","BookListContainer","this","props","loading","Component","Wrapped","connect","bookList","bindActionCreators","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","HomePage","CartPage","ShopHeader","to","length","App","role","path","component","exact","ErrorBoundry","state","hasError","errorInfo","setState","console","log","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateShoppingCart","updateOrder","find","updateCartItems","slice","updateCartItem","changer","quantity","cart","itemIndex","findIndex","newItem","reduce","sum","current","timeout","store","createStore","applyMiddleware","thunkMiddleware","next","getState","ReactDom","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.66469580.chunk.js","sourcesContent":["import React from 'react';\n\nexport const {\n    Provider: BookstoreServiceProvider,\n    Consumer: BookstoreServiceConsumer\n} = React.createContext();\n","\nconst booksLoaded = (newBooks) => {\n    return {\n        type: 'FETCH_BOOKS_SUCCESS',\n        payload: newBooks,\n    }\n};\n\nconst booksRequested = () => {\n    return {\n        type: 'FETCH_BOOKS_REQUEST',\n    }\n};\n\nconst booksError = (error) => {\n    return {\n        type: 'FETCH_BOOKS_FAILURE',\n        payload: error,\n    }\n};\n\nexport  const bookAddedToCart = (bookId) => {\n    return {\n        type: 'BOOK_ADDED_TO_CART',\n        payload: bookId,\n\n    }\n};\n\nexport  const bookDecreasedInCart = (bookId) => {\n    return {\n        type: 'BOOK_DECREASED_IN_CART',\n        payload: bookId,\n\n    }\n};\n\nexport  const bookRemovedFromCart = (bookId) => {\n    return {\n        type: 'BOOK_REMOVED_FROM_CART',\n        payload: bookId,\n    }\n};\n\nconst fetchBooksOld =( bookstoreService, dispatch) =>  () => {\n    dispatch(booksRequested());\n    bookstoreService.getBooks()\n        .then( (data) => dispatch( booksLoaded(data)) )\n        .catch( (err) => dispatch( booksError(err)) )\n};\n\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\n    dispatch(booksRequested());\n    bookstoreService.getBooks()\n        .then( (data) => dispatch( booksLoaded(data)) )\n        .catch( (err) => dispatch( booksError(err)) )\n};\n\nexport {\n    fetchBooks,\n};\n","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapped, f) => f(wrapped), comp);\n};\nexport default compose;\n","import BookListItem from \"./book-list-item\";\n\nexport default BookListItem;\n","import React from 'react';\nimport './book-list-item.css'\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n    const {title, author, price, coverImage } = book;\n\n    return (\n        <div className=\"book-list-item\">\n            <div className=\"book-cover\">\n                <img src={coverImage} alt = \"Cover\"/>\n            </div>\n            <div className=\"book-details\">\n                <span className=\"book-title\"> {title} </span>\n                <div className=\"book-author\"> {author} </div>\n                <div className=\"book-price\"> {price} </div>\n                <button\n                    onClick={ onAddedToCart }\n                    className=\"btn btn-info add-to-cart\">\n                    Add to cart\n                </button>\n\n            </div>\n        </div>\n    )\n};\n\nexport default BookListItem;\n","import Spinner from \"./spinner\";\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return <div>Loading...</div>\n};\nexport default Spinner;\n","import ErrorIndicator from \"./error-indicator\";\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = (error) => {\n    return <div>{error.error.message}</div>\n};\nexport default ErrorIndicator;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { withBookstoreService } from \"../hoc\";\nimport { fetchBooks, bookAddedToCart } from \"../../actions\";\nimport { compose } from \"../../utils\";\nimport BookListItem from \"../book-list-item\";\nimport './book-list.css';\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nconst BookList = ({ books, onAddedToCart }) => {\n    return (\n        <ul className=\"book-list\">\n            { books.map((book) => {\n                return (\n                    <li key={book.id}>\n                        <BookListItem\n                            onAddedToCart={ () => onAddedToCart(book.id) }\n                            book={book}\n                        />\n                    </li>\n                )})\n            }\n        </ul>\n    )\n};\n\nclass BookListContainer  extends Component {\n\n    componentDidMount() {\n       this.props.fetchBooks();\n    }\n\n    render() {\n        const { books, loading, error, onAddedToCart } = this.props;\n\n        if (loading) {\n            return <Spinner/>;\n        }\n\n        if (error) {\n            return <ErrorIndicator error = {error}/>;\n        }\n\n        return <BookList books={ books } onAddedToCart={ onAddedToCart }/>\n\n    }\n}\n\nconst mapStateToProps = ({ bookList:{ books, loading, error }}) => {\n    return {books, loading, error }\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n   return bindActionCreators({\n       fetchBooks: fetchBooks(bookstoreService),\n       onAddedToCart: bookAddedToCart ,\n   },\n    dispatch\n   );\n};\n\nexport default compose(\n    withBookstoreService(),\n    connect(mapStateToProps, mapDispatchToProps)\n    )(BookListContainer);\n","import React from 'react';\nimport { BookstoreServiceConsumer } from \"../bookstore-service-context\";\n\nexport const withBookstoreService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <BookstoreServiceConsumer>\n                {\n                    (bookstoreService) => {\n                       return (<Wrapped {...props}\n                                        bookstoreService = {bookstoreService}\n                       />)\n\n                    }\n                }\n            </BookstoreServiceConsumer>\n        );\n    }\n};\n","import React from 'react';\nimport './shopping-cart-table.css'\nimport { connect } from \"react-redux\";\nimport { bookAddedToCart,\n        bookDecreasedInCart,\n        bookRemovedFromCart} from \"../../actions\";\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n\n    return (\n        <div className=\"shopping-cart-table\">\n            <h2> Your order: </h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Item</th>\n                    <th>Count</th>\n                    <th>Price</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n\n                <tbody>\n                {\n                    items.map( (item, idx) => {\n                        const { id, title, count, total } = item;\n                        return(\n                            <tr key={id}>\n                                <td>{ idx +1 }</td>\n                                <td>{ title }</td>\n                                <td>{ count }</td>\n                                <td>${ total }</td>\n                                <td>\n                                    <button onClick={() => onDelete(id) }\n                                            className=\"btn btn-outline-danger\">\n                                        <i className=\"fa fa-trash-o\" />\n                                    </button>\n                                    <button onClick={ () => onIncrease(id) }\n                                            className=\"btn btn-outline-success\">\n                                        <i className=\"fa fa-plus-circle\" />\n                                    </button>\n                                    <button onClick={ () => onDecrease(id) }\n                                            className=\"btn btn-outline-warning\">\n                                        <i className=\"fa fa-minus circle\" />\n                                    </button>\n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n                </tbody>\n            </table>\n            <div className=\"total\">\n                Total: $ { total }\n            </div>\n        </div>\n    );\n\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\n    return {\n        items: cartItems,\n        total: orderTotal,\n    };\n};\n\nconst mapDispatchToProps =  {\n        onIncrease: bookAddedToCart,\n        onDecrease: bookDecreasedInCart,\n        onDelete: bookRemovedFromCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import ShoppingCartTable from \"./shopping-cart-table\";\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport BookList from \"../book-list/book-list\";\nimport ShoppingCartTable from \"../shopping-cart-table\";\n\nconst HomePage = () => {\n  return (\n      <>\n        <BookList />\n        <ShoppingCartTable />\n      </>\n  )\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n    return (\n        <div> Cart Page</div>\n    )\n};\n\nexport default CartPage;\n","import ShopHeader from \"./shop-header\";\n\nexport default ShopHeader;\n","import React from 'react';\nimport './shop-header.css';\nimport { Link } from \"react-router-dom\";\nimport ShoppingCartTable from \"../shopping-cart-table/index\"\nimport { connect } from \"react-redux\";\n\n\nconst ShopHeader = ({items, total}) => {\n    return(\n        <header className=\"shop-header row\">\n            <Link to=\"/react_shop\">\n              <div className=\"logo text-dark\"> Book Store </div>\n            </Link>\n            <Link to=\"/cart\">\n                <div className=\"shopping-cart\">\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\n                    {items.length} items (${total })\n                </div>\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\n    return {\n        items: cartItems,\n        total: orderTotal,\n    };\n};\n\nexport default connect(mapStateToProps)(ShopHeader);\n","import App from \"./app\";\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage, CartPage } from '../pages';\nimport ShopHeader  from \"../shop-header\";\nimport './app.css';\n\nconst App = () => {\n    ;\n    return (\n        <main role=\"main\" className=\"container\">\n            <ShopHeader />\n            <Switch>\n                <Route\n                    path={\"/react_shop\"}\n                    component={ HomePage }\n                    exact\n                />\n                <Route\n                    path={\"/cart\"}\n                    component={ CartPage }\n                />\n            </Switch>\n        </main>\n    )\n};\nexport default App;\n","import ErrorBoundry from \"./error-boundry\";\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from \"../error-indicator\";\n\n\nexport default class ErrorBoundry extends Component {\n    state = {\n        hasError: false,\n        errorInfo: null,\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({hasError: true, errorInfo: errorInfo});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            console.log(this.state.errorInfo);\n            return <ErrorIndicator message = {`error message from Boundry ${this.state.errorInfo}`} />\n        }\n        return this.props.children;\n    }\n}\n","\nexport default class BookstoreService {\n    data = [\n        {\n            id:1,\n            title: \"title 1\",\n            author: \"author 1\",\n            price: 25,\n            coverImage: \"https://cdn1.ozone.ru/multimedia/c400/1037874847.jpg\",\n        },\n        {\n            id:2,\n            title: \"title 2\",\n            author: \"author 2\",\n            price: 43,\n            coverImage: \"https://cdn1.ozone.ru/multimedia/c400/1028566083.jpg\",\n        }\n    ];\n\n    getBooks() {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                Math.random() > 0.85\n                    ? reject(new Error(\"something bad happened\"))\n                    : resolve(this.data);\n            }, 1000)\n        })\n    }\n }\n","export const updateBookList = (state, action) => {\n    if( state === undefined ) {\n        return {\n            books: [],\n            loading: true,\n            error: null,\n        }\n    }\n\n    switch (action.type) {\n        case 'FETCH_BOOKS_REQUEST':\n            return {\n                books: [],\n                loading: true,\n                error: null,\n            };\n        case 'FETCH_BOOKS_SUCCESS':\n            return {\n                books: action.payload,\n                loading: false,\n                error: null,\n            };\n        case 'FETCH_BOOKS_FAILURE':\n            return {\n                books: [] ,\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state.bookList;\n    }\n};\n","export const updateShoppingCart = (state, action) => {\n    if( state === undefined ) {\n        return {\n            cartItems: [],\n            orderTotal: 0,\n        }\n    }\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART':\n            return updateOrder(state, action.payload, 1);\n        case 'BOOK_DECREASED_IN_CART':\n            return updateOrder(state, action.payload, -1);\n        case 'BOOK_REMOVED_FROM_CART':\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\n            return updateOrder(state, action.payload, - item.count);\n        default:\n            return state.shoppingCart;\n    }\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n    if (item.count === 0) {\n        return [\n            ...cartItems.slice(0, idx),\n            ...cartItems.slice(idx + 1)\n        ]\n    }\n    if (idx === -1) {\n        return [\n            ...cartItems,\n            item\n        ]\n    }\n    return [\n        ...cartItems.slice(0, idx),\n        item,\n        ...cartItems.slice(idx + 1)\n    ]\n};\n\nconst updateCartItem = (book, item = {}, changer) => {\n    const {\n        id = book.id,\n        count = 0,\n        title = book.title,\n        total = 0\n    } = item;\n\n    return {\n        id,\n        title,\n        count: count + changer,\n        total: total + book.price * changer,\n    }\n};\n\nfunction updateOrderTotal(cart) {\n    // console.log(`cart = ${cart[0].total + cart[1].total}`);\n    let total = 0;\n    return cart.reduce(function (sum, current) {\n        return sum + current.total;\n    }, total)\n}\n\nfunction updateOrder(state, bookId, quantity) {\n    const { bookList: { books }, shoppingCart: { cartItems } } = state;\n    const book = books.find((book) => book.id === bookId);\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\n    const item = cartItems[itemIndex];\n    const newItem = updateCartItem(book, item, quantity);\n    return {\n        cartItems: updateCartItems(cartItems, newItem, itemIndex),\n        orderTotal: updateOrderTotal(updateCartItems(cartItems, newItem, itemIndex)),\n    };\n}\n","import { updateBookList } from \"./book-list\";\nimport { updateShoppingCart } from \"./shopping-cart\";\n\n\n\nexport const reducer = (state, action) => {\n   return {\n       bookList: updateBookList(state, action),\n       shoppingCart: updateShoppingCart(state, action)\n          }\n};\n","import { createStore, applyMiddleware  } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport { reducer } from \"./reducers\";\n\nconst logMiddleWare = ({getState}) => (next) => (action) => {\nconsole.log(action.type, getState());\nreturn next(action);\n};\n\nconst stringMiddleWare = () => (next) => (action) => {\n    if (typeof action === \"string\") {\n        return next ({\n            type: action,\n        });\n    }\nreturn next(action);\n};\n\nconst store = createStore(reducer, applyMiddleware(\n    thunkMiddleware, stringMiddleWare, logMiddleWare));\n\nconst delayedActionCreator  = (timeout) => (dispatch) => {\n    setTimeout(() => dispatch({\n        type: 'DELAYED_ACTION',\n    }), timeout )\n};\nstore.dispatch(delayedActionCreator(3000));\nexport default store;\n\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./components/app\";\nimport ErrorBoundry from \"./components/error-boundry\";\nimport BookstoreService from \"./services/bookstore-service\";\nimport { BookstoreServiceProvider } from \"./components/bookstore-service-context\";\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDom.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BookstoreServiceProvider value = { bookstoreService }>\n                <Router>\n                    <App />\n                </Router>\n            </BookstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}